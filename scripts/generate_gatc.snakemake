
import os
import re
import inspect

filename = inspect.getframeinfo(inspect.currentframe()).filename
path = os.path.dirname(os.path.abspath(filename))


print(config.keys())

rule all:
    input:
        expand('%s/gatcFragments/{species}.gff.gz' % config['outdir'],
               species=config['genome'].keys())

rule gff:
    input:
        mast='%s/gatcFragments/{species}_gatc_Mast.txt.gz' % config['outdir'],
        chromsizes=lambda wildcards: config['chromsizes'][wildcards.species]
    output:
        '%s/gatcFragments/{species}.gff.gz' % config['outdir']
    params:
        '{species}'
    shell:
        "{path}/create_fragment.awk -v pattern='ID=gene:{params}GATC' "
        "{input.chromsizes} <(gunzip -c {input.mast}) | "
        "gzip -c - > {output}"

rule mast:
    input:
        genome=lambda wildcards: config['genome'][wildcards.species],
        meme='%s/gatcFragments/GATC.meme' % config['outdir']
    output:
        '%s/gatcFragments/{species}_gatc_Mast.txt.gz' % config['outdir']
    params:
        mast=config['mast'],
        meme='%s/meme' % config['outdir']
    shell:
        "{params.mast} {input.meme} {input.genome} -oc {params.meme} "
        "              -norc -nostatus -nohtml -notext -hit_list -mt 0.004 | "
        "gzip - > {output}"

rule generate_gatc:
    output:
        '%s/gatcFragments/GATC.meme' % config['outdir']
    shell:
        "{path}/generate_gatc_meme.sh > {output}"
